<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-10-11T22:01:04+05:30</updated><id>/</id><title type="html">Deepak Murthy’s Blog</title><subtitle></subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2017/10/11/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-10-11T19:54:24+05:30</published><updated>2017-10-11T19:54:24+05:30</updated><id>/jekyll/update/2017/10/11/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2017/10/11/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Fast.ai - Week 1:Assigment</title><link href="/fastai/2017/10/11/fastai-week1-assigment.html" rel="alternate" type="text/html" title="Fast.ai - Week 1:Assigment" /><published>2017-10-11T00:00:00+05:30</published><updated>2017-10-11T00:00:00+05:30</updated><id>/fastai/2017/10/11/fastai-week1-assigment</id><content type="html" xml:base="/fastai/2017/10/11/fastai-week1-assigment.html">&lt;p&gt;Finish getting your EC2 instance set up and be able to run the lesson 1 notebook. If you have any problems, you can post questions on the AWS setup topic or the running lesson 1 notebook topic.
Set up the kaggle CLI397, and use it to download data for the Dogs vs Cats: Redux415 competition (a different dataset than the one we shared with you) to your EC2 instance.
Successfully submit to the above competition, using kaggle-cli, and try to get in the top 50%
Modify the lesson 1 notebook to work with the new dataset.
Look through other image data sets225 and choose one to work on during the course. You should talk with your group about whether you all want to work on the same dataset or not (either is fine). Check if a forum thread already exists for that dataset, and if not, create one. You can use the thread to talk with other students who are working with the same dataset.
Download the data to your EC2 instance, and modify the lesson 1 notebook to run on a sample subset of the data.&lt;/p&gt;</content><author><name></name></author><category term="fastai" /><summary type="html">Finish getting your EC2 instance set up and be able to run the lesson 1 notebook. If you have any problems, you can post questions on the AWS setup topic or the running lesson 1 notebook topic. Set up the kaggle CLI397, and use it to download data for the Dogs vs Cats: Redux415 competition (a different dataset than the one we shared with you) to your EC2 instance. Successfully submit to the above competition, using kaggle-cli, and try to get in the top 50% Modify the lesson 1 notebook to work with the new dataset. Look through other image data sets225 and choose one to work on during the course. You should talk with your group about whether you all want to work on the same dataset or not (either is fine). Check if a forum thread already exists for that dataset, and if not, create one. You can use the thread to talk with other students who are working with the same dataset. Download the data to your EC2 instance, and modify the lesson 1 notebook to run on a sample subset of the data.</summary></entry></feed>